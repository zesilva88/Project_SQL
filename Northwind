-- a. Mostre todos os supplier 
select * from suppliers;

-- b. Mostre todas as categorias 
select * from categories;

-- c. Mostre o produto mais caro por categoria, ordenado por valor 
select c.CategoryName, max(p.UnitPrice) value
from Products p
inner join Categories c
	on p.CategoryID = c.CategoryID
group by c.CategoryName
order by value;

select t.CategoryID, t.CategoryName,t.ProductID, t.ProductName, t.UnitPrice  
from (
	select c.CategoryID, c.CategoryName,p.ProductID, p.ProductName, p.UnitPrice 
	, ROW_NUMBER() OVER(PARTITION BY CategoryName ORDER BY p.UnitPrice DESC) AS i
	from Products p
	inner join Categories c
		on p.CategoryID = c.CategoryID
) t
where t.i = 1;


-- d. Mostre o nome da categoria, o nome do produto, e o pre�o total dos 5 produtos com descontos mais elevado 
select top 5 c.CategoryName, p.ProductName, od.Discount, sum(od.UnitPrice * od.Quantity * (1 - Discount)) total
from Products p
inner join Categories c
	on p.CategoryID = c.CategoryID
inner join [Order Details] od
	on p.ProductID = od.ProductID
group by c.CategoryName, p.ProductName, od.Discount
order by od.Discount desc;

-- e. Mostre o primeiro e �ltimo nome dos empregados, o nome dos territ�rios e das regi�es atribu�dos a cada um. 
select e.FirstName, e.LastName, t.TerritoryDescription, r.RegionDescription 
from Employees e
inner join EmployeeTerritories et
	on e.EmployeeID = et.EmployeeID
inner join Territories t
	on et.TerritoryID = t.TerritoryID
inner join Region r
	on t.RegionID = r.RegionID;

-- f. Mostrar qual o volume de neg�cios por cidade 
select t.TerritoryDescription, round(SUM(od.UnitPrice * od.Quantity * (1 - Discount)),2) total
from Territories t
inner join EmployeeTerritories et
	on et.TerritoryID = t.TerritoryID
inner join Employees e
	on e.EmployeeID = et.EmployeeID
inner join Orders o
	on e.EmployeeID = o.EmployeeID
inner join [Order Details] od
	on o.OrderID = od.OrderID
group by t.TerritoryDescription;

-- g. Mostrar quais os clientes que n�o fizeram compras 
select c.* 
from Customers c
left join Orders o
	on c.CustomerID = o.CustomerID
where o.CustomerID is null;

-- h. Mostrar quantas encomendas cada transportadora transportou. 
select s.CompanyName, count(s.ShipperID)
from Shippers s
inner join Orders o
	on s.ShipperID = o.ShipVia
group by s.CompanyName;

-- i. Mostre o primeiro e �ltimo nome dos empregados e o primeiro e �ltimo nome do respons�vel de cada um dele  
select e.FirstName, e.LastName, c.FirstName FirstNameChefe, c.LastName LastNameChefe
from Employees e
left join Employees c
	on e.EmployeeID = c.ReportsTo;

-- j. categorias vendidas por regioes de Empregados
select distinct r.RegionDescription, c.CategoryName 
from Categories c
inner join Products p
		on c.CategoryID = p.CategoryID
inner join [Order Details] od
	on p.ProductID = od.ProductID
inner join Orders o
	on o.OrderID = od.OrderID
inner join Employees e
	on e.EmployeeID = o.EmployeeID
inner join EmployeeTerritories et
	on et.EmployeeID = e.EmployeeID
inner join Territories t
	on et.TerritoryID = t.TerritoryID
inner join region r
	on t.RegionID = r.RegionID

-- k. categorias vendidas no mes abril de 1997
select c.CategoryName
from Categories c
inner join Products p
		on c.CategoryID = p.CategoryID
inner join [Order Details] od
	on p.ProductID = od.ProductID
inner join Orders o
	on o.OrderID = od.OrderID
where MONTH(o.OrderDate) = 4 and year(o.OrderDate) = 1997;


-- l. Pedidos (Orders) que tenham sido enviado apos o sexto dia do pedido
select *  
from Orders
where DATEDIFF(DAY, OrderDate, ShippedDate)  > 6
